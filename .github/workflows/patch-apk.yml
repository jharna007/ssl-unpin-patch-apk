jobs:
  patch-apk:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install apk-mitm
      run: npm install -g apk-mitm

    - name: Download tools
      run: |
        echo "Downloading Apktool..."
        curl -L -o apktool.jar 'https://github.com/iBotPeaches/Apktool/releases/download/v2.9.3/apktool_2.9.3.jar'
        
        echo "Downloading uber-apk-signer..."
        curl -L -o uber-apk-signer.jar 'https://github.com/patrickfav/uber-apk-signer/releases/download/v1.3.0/uber-apk-signer-1.3.0.jar'

    - name: Download APK
      run: |
        echo "Downloading APK..."
        curl -L -o base.apk 'https://files.catbox.moe/uzl6jg.apk'

    - name: Run Manual Patching Process
      run: |
        # 1. Decode APK without resources (-r) to avoid the compilation error
        echo "--> Decoding APK (code only)..."
        java -jar apktool.jar d -r -o decoded-apk base.apk

        # 2. Run apk-mitm on the decoded files to patch smali code
        echo "--> Applying SSL Unpinning patches..."
        apk-mitm --disassembly decoded-apk

        # 3. Rebuild the APK. Apktool will use the original resources from base.apk
        echo "--> Rebuilding APK..."
        java -jar apktool.jar b -o patched-unsigned.apk decoded-apk

        # 4. Sign the rebuilt APK to make it installable
        echo "--> Signing the patched APK..."
        java -jar uber-apk-signer.jar -a patched-unsigned.apk -o patched-signed.apk

    - name: Upload patched APK
      uses: actions/upload-artifact@v4
      with:
        name: patched-base-apk
        path: patched-signed.apk
